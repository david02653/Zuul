spring.application.name=api-gateway
server.port=9039
eureka.client.serviceUrl.defaultZone=http://140.121.197.130:9040/eureka/

# [Eureka]
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=140.121.197.130
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=2


# [Actuator]
# provide full git Information
management.info.git.mode=full
#management.context-path=/actuator
management.security.enabled=false





#Ribbon----------------------------------------------------
zull.retryable=true
#該引數用來設定路由轉發請求的超時時間。它的處理與ribbon.ConnectTimeout相似，若出現路由請求連線超時，會自動進行重試路由請求，如果重試依然失敗，Zuul會丟擲異常。
ribbon.ReadTimeout=3500
#該引數用來設定路由轉發請求的時候，建立請求連線的超時時間。若出現路由請求連線超時，會自動進行重試路由請求，如果重試依然失敗，Zuul會丟擲異常。
ribbon.ConnectTimeout=3500
# 最大自動重試次數
ribbon.MaxAutoRetries=2
# 最大自動重試下一個服務的次數(直接更新服務)
ribbon.MaxAutoRetriesNextServer=0


#總的超時時間 = (1 + MaxAutoRetries + MaxAutoRetriesNextServer) * ReadTimeout
#如果超時了，但是熔斷機制還沒有超時，則zuul會異常

# 如果有使用服務發現需配置ribbon.ReadTimeout和ribbon.SocketTimeout
# 如果有通過URL配置Zuul route，則需要使用zuul.host.connect-timeout-millis和zuul.host.socket-timeout-millis


#Hystrix------------------------------------------------------
#隔離策略都是控制執行緒數量的，只不過是控制的方式不同。 hystrix預設的隔離策略是thread，但是在zuul中，預設的hystrix隔離策略是semaphore

#---隔離策略是THREAD（執行緒）： 修改為執行緒隔離方式
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.threadpool.default.coreSize=10
hystrix.threadpool.default.maximumSize=10
# 如該值為-1，那麼使用的是SynchronousQueue，否則使用的是LinkedBlockingQueue。注意，修改MQ的型別需要重啟。例如從-1修改為100，需要重啟，因為使用的Queue型別發生了變化
hystrix.threadpool.default.maxQueueSize=-1 

#---隔離策略是SEMAPHORE(訊號量)
#hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 預設值
#hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10 


#---超時設定
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=8000
#不設定隔離策略，hystrix的超時也是生效的
#為了確保Ribbon重試的時候不被熔斷，需要讓Hystrix的超時時間大於Ribbon的超時時間，否則Hystrix命令超時後，該命令直接熔斷，重試機制就沒意義了。

#建議通過CommandKey設定不同微服務的超時時間,hystrix.command.
#這個超時時間要根據所對應的業務和伺服器所能承受的負載來設定，要根據業務的平均響應時間設定，
#一般是大於平均響應時間的20%~100%,最好是根據壓力測試結果來評估，這個值設定太大，會導致執行緒不夠用而會導致太多的任務被fallback；
#設定太小，一些特殊的慢業務失敗率提升，甚至會造成這個業務一直無法成功，在重試機制存在的情況下，反而會加重後端服務壓力。


#強制開啟熔斷器，如果開啟這個開關，那麼拒絕所有request
#hystrix.command.default.circuitBreaker.forceOpen=false



#Zuul Filter--------------------------------------------------------------------
#禁用指定的Filter (pre, routing, post, error)
#zuul.FormBodyWrapperFilter.pre.disable=true;
